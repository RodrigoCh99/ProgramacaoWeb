@model ProjectCRUD.Domain.Models.Usuario

@{
    ViewBag.Title = "Criar";
}

<h2>Criar Usuário</h2>

@using (Html.BeginForm())
{
    @section Scripts {

        <script src="http://code.jquery.com/jquery-1.9.0.js"></script>
        <script src="http://code.jquery.com/jquery-migrate-1.2.1.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.0/jquery.mask.js"></script>
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.11/jquery-ui.min.js"></script>
        <script type="text/javascript">
            $(document).ready(function () {

                $("#Cpf").mask('000.000.000-00', { reverse: false });
                $("#Telefone").mask('(00)00000-0000', { reverse: false });
                $("#Cep").mask('00.000-000', { reverse: false });

                $(function () {
                    $("#datepickerDataNascimento").datepicker({
                        dateFormat: 'dd/mm/yy',
                        dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado', 'Domingo'],
                        dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                        dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                        monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                        monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                        yearRange: "1930:2020",
                        changeMonth: true,
                        changeYear: true
                    }).attr('readonly', 'readonly');
                });
            })
        </script>
    }
    <html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    </head>
    <body>
        <form>
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @maxlength = "100", onkeypress = "return Letras();" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Sexo, new List<SelectListItem>
                                             {
                                               new SelectListItem { Text = "Masculino", Value = "1"},
                                               new SelectListItem { Text = "Feminino", Value = "2"}
                                             }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control", @maxlength = "14", placeholder = "000.000.000-00", onkeypress = "return MascaraNumerico(event)" } })
                        @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Dt_nascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Dt_nascimento, new { htmlAttributes = new { @class = "form-control", placeholder = "00/00/0000", @id = "datepickerDataNascimento" } })
                        @Html.ValidationMessageFor(model => model.Dt_nascimento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", @maxlength = "15", placeholder = "(00) 00000-0000", onkeypress = "return MascaraNumerico(event)" } })
                        @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @maxlength = "30", placeholder = "usuario@dominio.com.br" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control", @maxlength = "150" } })
                        @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ComplementoLogradouro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.ComplementoLogradouro, new { htmlAttributes = new { @class = "form-control", @maxlength = "150" } })
                            @Html.ValidationMessageFor(model => model.ComplementoLogradouro, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control", @maxlength = "10", onkeypress = "return MascaraNumerico(event)" } })
                            @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Uf, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.DropDownListFor(model => model.Uf, new List<SelectListItem>
                                             {
                                               new SelectListItem { Text = "AC", Value = "AC"},
                                               new SelectListItem { Text = "AL", Value = "AL"},
                                               new SelectListItem { Text = "AP", Value = "AP"},
                                               new SelectListItem { Text = "AM", Value = "AM"},
                                               new SelectListItem { Text = "BA", Value = "BA"},
                                               new SelectListItem { Text = "CE", Value = "CE"},
                                               new SelectListItem { Text = "DF", Value = "DF"},
                                               new SelectListItem { Text = "ES", Value = "ES"},
                                               new SelectListItem { Text = "GO", Value = "GO"},
                                               new SelectListItem { Text = "MA", Value = "MA"},
                                               new SelectListItem { Text = "MT", Value = "MT"},
                                               new SelectListItem { Text = "MS", Value = "MS"},
                                               new SelectListItem { Text = "MG", Value = "MG"},
                                               new SelectListItem { Text = "PA", Value = "PA"},
                                               new SelectListItem { Text = "PB", Value = "PB"},
                                               new SelectListItem { Text = "PR", Value = "PR"},
                                               new SelectListItem { Text = "PR", Value = "PR"},
                                               new SelectListItem { Text = "PI", Value = "PI"},
                                               new SelectListItem { Text = "RJ", Value = "RJ"},
                                               new SelectListItem { Text = "RN", Value = "RN"},
                                               new SelectListItem { Text = "RS", Value = "RS"},
                                               new SelectListItem { Text = "RO", Value = "RO"},
                                               new SelectListItem { Text = "RR", Value = "RR"},
                                               new SelectListItem { Text = "SC", Value = "SC"},
                                               new SelectListItem { Text = "SP", Value = "SP"},
                                               new SelectListItem { Text = "SE", Value = "SE"},
                                               new SelectListItem { Text = "TO", Value = "TO"},
                                             }, "Selecione o Estado", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Uf, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Municipio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Municipio, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", onkeypress = "return Letras();" } })
                            @Html.ValidationMessageFor(model => model.Municipio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", onkeypress = "return Letras();" } })
                        @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (@ViewBag.ListaEmpresas != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.CodigoEmpresa, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.DropDownList("ListaEmpresas", null, htmlAttributes: new { @class = "form-control m-b" })
                                @Html.ValidationMessageFor(model => model.CodigoEmpresa, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                }
                @if (@ViewBag.ListaPerfil != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.CodigoPerfil, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.DropDownList("ListaPerfil", null, htmlAttributes: new { @class = "form-control m-b" })
                                @Html.ValidationMessageFor(model => model.CodigoPerfil, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.Senha, new { @class = "form-control", placeholder = "Digite sua Senha" })
                        @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Salvar" class="col-md-1 btn btn-default" />
                    </div>
                </div>
            </div>


            <div>
                <br />
                <input type="button" class="col-md-1 btn btn-info" value="Voltar " onclick="location.href='@Url.Action("Index", "Usuario")'" />
            </div>
        </form>
    </body>
</html>
}